# Travis setup.
# Tox + numpy + scipy + coveralls
#
# Notes:
# [1] Miniconda is used to quickly install numpy and scipy. Otherwise
#     their building time is too much for Travis.
#     See this gist for details: https://gist.github.com/dan-blanchard/7045057
#     See also http://conda.pydata.org/docs/travis.html

sudo: false
language: python
python:
  - "2.7"
  - "3.3"
  - "3.4"
  - "3.5"

# For contents of before_install, see [1]
before_install:
  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh;
    else
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - export "PATH=$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update --yes conda
  # Useful for debugging any issues with conda
  - conda info -a
  - pip install --upgrade pip
  # The next couple lines fix a crash with multiprocessing on Travis and are not specific to using Miniconda
  #- sudo rm -rf /dev/shm
  #- sudo ln -s /run/shm /dev/shm

# command to install dependencies
install:
  - conda create --quiet --name testenv python=$TRAVIS_PYTHON_VERSION numpy scipy  # See [1]
  - source activate testenv
  - pip install python-coveralls nose-cov  # Not available via conda for OS X
  - python setup.py install

# command to run tests
script:
  - nosetests --with-cov --cov gazelib --logging-level=INFO
  # Command nosetests is installed by nose-cov

after_success:
  - coveralls --config_file .coveragerc





# Install packages
#install:
#  - conda install --yes python=$TRAVIS_PYTHON_VERSION atlas numpy scipy matplotlib nose dateutil pandas statsmodels
  # Coverage packages are on my binstar channel
#  - conda install --yes -c dan_blanchard python-coveralls nose-cov
#  - python setup.py install

# Run test
#script:
#  - nosetests --with-cov --cov YOUR_PACKAGE_NAME_HERE --cov-config .coveragerc --logging-level=INFO

# Calculate coverage
#after_success:
